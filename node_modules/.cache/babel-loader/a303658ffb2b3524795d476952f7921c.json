{"ast":null,"code":"// @license © 2020 Google LLC. Licensed under the Apache License, Version 2.0.\nconst e = async (t, r, i = t.name) => {\n  const a = [],\n        s = [];\n\n  for await (const n of t.getEntries()) {\n    const t = `${i}/${n.name}`;\n    n.isFile ? s.push(n.getFile().then(e => Object.defineProperty(e, \"webkitRelativePath\", {\n      configurable: !0,\n      enumerable: !0,\n      get: () => t\n    }))) : n.isDirectory && r && a.push(e(n, r, t));\n  }\n\n  return [...(await Promise.all(a)).flat(), ...(await Promise.all(s))];\n};\n\nexport default (async (t = {}) => {\n  t.recursive = t.recursive || !1;\n  const r = await window.chooseFileSystemEntries({\n    type: \"open-directory\"\n  });\n  return e(r, t.recursive);\n});","map":{"version":3,"sources":["/home/deosebitsoft/Documents/armadillo-music-player/node_modules/browser-fs-access/dist/fs-access-legacy/directory-open.mjs"],"names":["e","t","r","i","name","a","s","n","getEntries","isFile","push","getFile","then","Object","defineProperty","configurable","enumerable","get","isDirectory","Promise","all","flat","recursive","window","chooseFileSystemEntries","type"],"mappings":"AAAA;AACA,MAAMA,CAAC,GAAC,OAAMC,CAAN,EAAQC,CAAR,EAAUC,CAAC,GAACF,CAAC,CAACG,IAAd,KAAqB;AAAC,QAAMC,CAAC,GAAC,EAAR;AAAA,QAAWC,CAAC,GAAC,EAAb;;AAAgB,aAAU,MAAMC,CAAhB,IAAqBN,CAAC,CAACO,UAAF,EAArB,EAAoC;AAAC,UAAMP,CAAC,GAAE,GAAEE,CAAE,IAAGI,CAAC,CAACH,IAAK,EAAvB;AAAyBG,IAAAA,CAAC,CAACE,MAAF,GAASH,CAAC,CAACI,IAAF,CAAOH,CAAC,CAACI,OAAF,GAAYC,IAAZ,CAAkBZ,CAAC,IAAEa,MAAM,CAACC,cAAP,CAAsBd,CAAtB,EAAwB,oBAAxB,EAA6C;AAACe,MAAAA,YAAY,EAAC,CAAC,CAAf;AAAiBC,MAAAA,UAAU,EAAC,CAAC,CAA7B;AAA+BC,MAAAA,GAAG,EAAC,MAAIhB;AAAvC,KAA7C,CAArB,CAAP,CAAT,GAAgIM,CAAC,CAACW,WAAF,IAAehB,CAAf,IAAkBG,CAAC,CAACK,IAAF,CAAOV,CAAC,CAACO,CAAD,EAAGL,CAAH,EAAKD,CAAL,CAAR,CAAlJ;AAAmK;;AAAA,SAAM,CAAC,GAAG,CAAC,MAAMkB,OAAO,CAACC,GAAR,CAAYf,CAAZ,CAAP,EAAuBgB,IAAvB,EAAJ,EAAkC,IAAG,MAAMF,OAAO,CAACC,GAAR,CAAYd,CAAZ,CAAT,CAAlC,CAAN;AAAiE,CAAhV;;AAAiV,gBAAe,OAAML,CAAC,GAAC,EAAR,KAAa;AAACA,EAAAA,CAAC,CAACqB,SAAF,GAAYrB,CAAC,CAACqB,SAAF,IAAa,CAAC,CAA1B;AAA4B,QAAMpB,CAAC,GAAC,MAAMqB,MAAM,CAACC,uBAAP,CAA+B;AAACC,IAAAA,IAAI,EAAC;AAAN,GAA/B,CAAd;AAAsE,SAAOzB,CAAC,CAACE,CAAD,EAAGD,CAAC,CAACqB,SAAL,CAAR;AAAwB,CAAvJ","sourcesContent":["// @license © 2020 Google LLC. Licensed under the Apache License, Version 2.0.\nconst e=async(t,r,i=t.name)=>{const a=[],s=[];for await(const n of t.getEntries()){const t=`${i}/${n.name}`;n.isFile?s.push(n.getFile().then((e=>Object.defineProperty(e,\"webkitRelativePath\",{configurable:!0,enumerable:!0,get:()=>t})))):n.isDirectory&&r&&a.push(e(n,r,t))}return[...(await Promise.all(a)).flat(),...await Promise.all(s)]};export default async(t={})=>{t.recursive=t.recursive||!1;const r=await window.chooseFileSystemEntries({type:\"open-directory\"});return e(r,t.recursive)};"]},"metadata":{},"sourceType":"module"}